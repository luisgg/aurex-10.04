win_width = Window.GetWidth();
win_height = Window.GetHeight();
ww_half = win_width / 2;
wh_half = win_height / 2;

offset = 0; //win_height / -4;

sourceImage = Image ("space_glow.png");
size_ratio = sourceImage.GetWidth() / win_width; // used later! todo: this is ugly
new_height = sourceImage.GetHeight() / size_ratio;
nh_half = new_height / 2;
scaledImage = sourceImage.Scale (win_width, new_height);
spaceGlow.sprite = Sprite (scaledImage);
spaceGlow.sprite.SetY (wh_half - nh_half + offset);
spaceGlow.sprite.SetOpacity (0);

sourceImage = Image ("sun_glow.png");
new_height = sourceImage.GetHeight() / size_ratio;
scaledImage = sourceImage.Scale (new_height, new_height); // todo: what if its not square ?
sunGlow.height = new_height;
sunGlow.sprite = Sprite (scaledImage);
sunGlow.sprite.SetX (ww_half - (new_height / 2));
sunGlow.sprite.SetY (wh_half + offset);
sunGlow.sprite.SetOpacity (0);

sourceImage = Image ("planet_black.png");
new_height = sourceImage.GetHeight() / size_ratio;
scaledImage = sourceImage.Scale (win_width, new_height);
planetBlack.sprite = Sprite (scaledImage);
planetBlack.sprite.SetY (wh_half + offset);
planetBlack.sprite.SetOpacity (1);

sourceImage = Image ("planet_glow.png");
new_height = sourceImage.GetHeight() / size_ratio;
scaledImage = sourceImage.Scale (win_width, new_height);
planetGlow.sprite = Sprite (scaledImage);
planetGlow.sprite.SetY ((wh_half + offset) - 2);
planetGlow.sprite.SetOpacity (0);

spaceGlow.start = 0;
spaceGlow.end = 0.5;

sunGlow.start = 0.3;
sunGlow.end = 0.9;
sunGlow.animStart = 0.2;
sunGlow.animEnd = 0.9;
sunGlow.startPos = (wh_half - (sunGlow.height / 4)) + offset;
sunGlow.endPos = (wh_half - (sunGlow.height / 2)) + offset;

planetGlow.start = 0.4;
planetGlow.end = 0.9;

fun remap (val, imin, imax, omin, omax) {
    return (((val - imin) / (imax - imin)) * (omax - omin)) + omin;
}

fun progress_callback (d, p) {
    if (p >= spaceGlow.start && p <= spaceGlow.end) {
        a = remap (p, spaceGlow.start, spaceGlow.end, 0, 1);
        spaceGlow.sprite.SetOpacity (a);
    }
    if (p >= sunGlow.start && p <= sunGlow.end) {
        a = remap (p, sunGlow.start, sunGlow.end, 0, 1);
        sunGlow.sprite.SetOpacity (a);
    }
    if (p >= sunGlow.animStart && p <= sunGlow.animEnd) {
        a = remap (p, sunGlow.animStart, sunGlow.animEnd, 0, 1);
        b = sunGlow.startPos - ((sunGlow.startPos - sunGlow.endPos) * a);
        sunGlow.sprite.SetY (b);
    }
    if (p >= planetGlow.start && p <= planetGlow.end) {
        a = remap (p, planetGlow.start, planetGlow.end, 0, 1);
        planetGlow.sprite.SetOpacity (a);
    }
}
Plymouth.SetBootProgressFunction(progress_callback);

