# Nagios-virt static configuration file. -*- text -*-
# $Id: virt-library.cfg,v 1.1 2007/09/25 11:53:44 rjones Exp $
#
#**********************************************************************
# WARNING: DO NOT EDIT THIS FILE.  EDITS WILL BE OVERWRITTEN
# NEXT TIME YOU RUN `nagios-virt install'
#**********************************************************************
# If you really want to make changes to this file, rename it as
# something else.

# We can't rely on anything in the standard Nagios configuration
# files, so redefine anything we need with a `virt-*' prefix.

define timeperiod {
  timeperiod_name virt-24x7
  alias           24 Hours A Day, 7 Days A Week
  sunday          00:00-24:00
  monday          00:00-24:00
  tuesday         00:00-24:00
  wednesday       00:00-24:00
  thursday        00:00-24:00
  friday          00:00-24:00
  saturday        00:00-24:00
}

define command {
  command_name    virt-host-notify-by-email
  command_line    /usr/bin/printf "%b" "***** Nagios-virt *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /bin/mail -s "Host $HOSTSTATE$ alert for $HOSTNAME$!" $CONTACTEMAIL$
}

define command {
  command_name    virt-notify-by-email
  command_line    /usr/bin/printf "%b" "***** Nagios-virt *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$" | /bin/mail -s "** $NOTIFICATIONTYPE$ alert - $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}

define contact {
  contact_name                 virt-root
  alias                        Root user
  service_notification_period  virt-24x7
  host_notification_period     virt-24x7
  service_notification_options w,u,c,r
  host_notification_options    d,r
  service_notification_commands virt-notify-by-email
  host_notification_commands   virt-host-notify-by-email
  email                        root@localhost
}

define contactgroup {
  contactgroup_name            virt-admins
  alias                        Virtual host administrator
  members                      virt-root
}

# Define generic virt host.

define host {
  name                         virt-host
  register                     0

  alias                        Unnamed virtual machine
  notifications_enabled        1
  event_handler_enabled        1
  flap_detection_enabled       1
  failure_prediction_enabled   1
  process_perf_data            1
  retain_status_information    1
  retain_nonstatus_information 1
  notification_period          virt-24x7
  max_check_attempts           3
  notification_interval        60
  contact_groups               virt-admins
}

# Define generic virt service.

define service {
  name                         virt-service
  register                     0

  service_description          Unnamed service on virtual machine
  active_checks_enabled        1
  passive_checks_enabled       1
  parallelize_check            1
  obsess_over_service          1
  check_freshness              0
  notifications_enabled        1
  event_handler_enabled        1
  flap_detection_enabled       1
  failure_prediction_enabled   1
  process_perf_data            1
  retain_status_information    1
  retain_nonstatus_information 1
  is_volatile                  0
  contact_groups               virt-admins
  max_check_attempts           3
  normal_check_interval        5
  retry_check_interval         3
  notification_interval        60
  check_period                 virt-24x7
  notification_period          virt-24x7
}

# Define generic "virt machine is up" service.

define command {
  command_name                 virt-check_virt
  command_line                 $USER1$/check_virt $HOSTNAME$
}

define service {
  name                         virt-service-up
  use                          virt-service
  register                     0

  service_description          Virtual machine is up
  check_command                virt-check_virt
}

# Normal check_ssh command doesn't allow us to add extra
# flags, so provide a specialised one which does:

define command {
  command_name                 virt-check_ssh
  command_line                 $USER1$/check_ssh $ARG1$ $HOSTADDRESS$
}

# Define generic SSH service.

define service {
  name                         virt-service-ssh
  use                          virt-service
  register                     0

  service_description          SSH Version Check
  check_command                virt-check_ssh!-t 5
}

# Define generic HTTP service.

define service {
  name                         virt-service-http
  use                          virt-service
  register                     0

  service_description          HTTP
  check_command                check_http
}
